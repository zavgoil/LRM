version: '3.9'

services:

  # Postgres 172.21.0.0/24

  db:
    image: postgres
    # restart: always
    # set shared memory limit when using docker-compose
    shm_size: 128mb
    # or set shared memory limit when deploy via swarm stack
    #volumes:
    #  - type: tmpfs
    #    target: /dev/shm
    #    tmpfs:
    #      size: 134217728 # 128*2^20 bytes = 128Mb
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: test_db
    # ports:
    #   - 5432:5432
    networks:
      db:
        ipv4_address: 172.21.0.10

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: root@root.com
      PGADMIN_DEFAULT_PASSWORD: root
    # ports:
    #   - 5050:80
    networks:
      db:
        ipv4_address: 172.21.0.100

  # Kafka 172.22.0.0/24

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    hostname: zookeeper
    container_name: zookeeper
    # ports:
    #   - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      kafka:
        ipv4_address: 172.22.0.10

  kafka:
    image: confluentinc/cp-server:7.2.1
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    #   - "9997:9997"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://172.22.0.20:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9997
      KAFKA_JMX_HOSTNAME: kafka
    networks:
      kafka:
        ipv4_address: 172.22.0.20

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    # ports:
    #   - 8082:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
    networks:
      kafka:
        ipv4_address: 172.22.0.30

  # user-service

  user-service:
    container_name: user-service
    depends_on:
      - kafka
      - db
    build:
      context: ./../
      dockerfile: docker/user-service/Dockerfile
      target: runner
    networks:
      kafka:
        ipv4_address: 172.22.0.40
      db:
        ipv4_address: 172.21.0.40

  # telegram-notifier

  telegram-notifier:
    container_name: telegram-notifier
    depends_on:
      - kafka
      - db
    build:
      context: ./../
      dockerfile: docker/telegram-notifier/Dockerfile
      target: runner
    networks:
      kafka:
        ipv4_address: 172.22.0.50
      db:
        ipv4_address: 172.21.0.50

networks:
  db:
    driver: bridge
    ipam:
      config:
        - subnet: 172.21.0.0/24
          gateway: 172.21.0.1
  kafka:
    driver: bridge
    ipam:
      config:
        - subnet: 172.22.0.0/24
          gateway: 172.22.0.1
